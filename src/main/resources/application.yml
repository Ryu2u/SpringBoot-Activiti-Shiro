spring:
  profiles:
    # 使用prod配置环境
    active: prod
# 所有环境通用的配置
#DataSource
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 每隔十分钟将监控数据输出到日志中
      time-between-log-stats-millis: 600000
      # 初始连接数
      initial-size: 5
      # 最小空闲连接
      min-idle: 5
      # 最大连接数
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位:毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间,单位:毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 1000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 如果使用Oracle,则把poolPreparedStatements配置为true,mysql5之后建议true
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      max-open-prepared-statements: 50
      # 配置监控统计拦截的filters,去掉后监控界面sql无法统计,'wall'用于防火墙
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能,慢sql记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置web-stat-filter
      web-stat-filter:
        enabled: true
        # 过滤规则
        url-pattern: /*
        # 忽略资源
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        # 配置principalCookieName,使得druid能够知道当前的cookie的用户是谁
        principal-cookie-name: ryuzu
        # 配置principalSessionName,使得druid能够知道当前的session的用户是谁
        principal-session-name: ryuzu
        # 配置profileEnable能够监控单个url调用的sql列表
        profile-enable: true
        #session统计功能
        session-stat-enable: true
        #最大session数
        session-stat-max-count: 100000
      stat-view-servlet:
        #配置StatViewServlet
        enabled: true
        url-pattern: /druid/*
        #是否能够重置数据(禁用HTML页面上的“Reset All”功能)
        reset-enable: false
      # 配置wall filter
      filter:
        wall:
          enabled: true
          db-type: mysql
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            # 是否允许非以上语句的其他语句,缺省关闭,通过这个选项就能够屏蔽DDL
            none-base-statement-allow: false
            # 检查UPDATE语句是否无where条件,这是有风险的,但不是SQL注入类型的风险
            update-where-none-check: true
            # 是否允许调用Connection.getMetadata方法,这个方法调用会暴露数据库的表信息
            metadata-allow: true
          # 对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          # 对被认为是攻击的SQL抛出SQLException
          throw-exception: true
      # 配置Druid监控Spring包方法的调用
      aop-patterns: packages
  # 配置spring关联
  # 设置使用Cglib进行代理,因为部分需要代理的不是接口不适用于JDK动态代理,会报错
  aop:
    proxy-target-class: true



