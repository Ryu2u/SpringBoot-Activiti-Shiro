
# 开发配置环境
server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/smart?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true
    username: root
    password: 123456
    # activiti配置 注:activiti配置必须在spring.datasource下
  activiti:
    # 参数说明: false: 默认值,activiti在启动时,对比数据库表中保存的版本,如果没有表或者版本不匹配,将抛出异常
    #         true: activiti会对数据库中所有表进行更新操作,如果表不存在,则自动创建
    #         create_drop: 在activiti启动时创建表,在关闭表时删除表(必须手动关闭引擎,才能删除表)
    #         drop_create: 在activiti启动时删除原来的旧表,然后再创建新表(不需要手动关闭引擎)
    database-schema-update: true
    # 检测表是否存在,activiti7默认没有开启数据库历史记录,启动数据库历史记录
    db-history-used: true
    # 记录历史等级, 可配置的历史级别有none,activity,audit,full
    # 参数说明: none: 不保存任何的历史数据,因此在流程执行过程中,这是最高效的
    #          activity: 级别高于none,保存流程实例与流程行为,其他数据不保存
    #          audit: 默认值, 除activity级别会保存的数据外,还会保存全部的流程任务及其属性
    #          full: 保存历史记录的最高级别,除了会保存audit级别的数据外,还会保存其他全部流程相关的细节数据,包括一些流程参数等
    history-level: full
    # 校验流程文件,默认校验resources下的processes文件夹里的流程文件
    check-process-definitions: false
  # redis 配置
  redis:
    host: 139.224.17.228
    port: 6379
    password: 152833
    lettuce:
      pool:
        max-active: 1024
        max-wait: 10000
        max-idle: 200
        min-idle: 4
    timeout: 10000
#热部署的配置
  devtools:
    restart:
      poll-interval: 3000ms
      quiet-period: 2999ms



# mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 配置Mybatis数据返回类型别名
  type-aliases-package: com.ryuzu.server.domain
  configuration:
    # 自动驼峰命名
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
